{"version":3,"file":"EntityConverter.js","sourceRoot":"","sources":["../../../src/lib/util/EntityConverter.ts"],"names":[],"mappings":";;AAOA,MAAqB,eAAe;IAElC,MAAM,CAAC,gBAAgB,CAAC,IAAe;QACrC,OAAO;YACL,IAAI,EAAE,WAAW;YACjB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW;YACnC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;YAC5D,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,IAAU;QAC3B,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QACD,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW;YACnC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,QAAQ,IAAI,SAAS;SAChC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,IAAc;QACnC,OAAO;YACL,IAAI,EAAE,UAAU;YAChB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;SAC7D,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,IAAoB;QACzC,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,IAAgB;QACvC,OAAO;YACL,IAAI,EAAE,YAAY;YAClB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM;YAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;YAC5D,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;IACJ,CAAC;CACF;AAtED,kCAsEC","sourcesContent":["import { Category, Cloudcast, LiveStream, Playlist, Tag, User } from 'mixcloud-fetch';\nimport { UserEntity } from '../entities/UserEntity.js';\nimport { CloudcastEntity } from '../entities/CloudcastEntity.js';\nimport { PlaylistEntity } from '../entities/PlaylistEntity.js';\nimport { SlugEntity } from '../entities/SlugEntity.js';\nimport { LiveStreamEntity } from '../entities/LiveStreamEntity.js';\n\nexport default class EntityConverter {\n\n  static convertCloudcast(data: Cloudcast): CloudcastEntity {\n    return {\n      type: 'cloudcast',\n      id: data.id,\n      url: data.url,\n      name: data.name,\n      description: data.description,\n      thumbnail: data.images?.extra_large,\n      owner: data.owner ? this.convertUser(data.owner) : undefined,\n      isExclusive: data.isExclusive,\n      streams: data.streams,\n      duration: data.duration\n    };\n  }\n\n  static convertUser(data: User): UserEntity {\n    const locationParts: string[] = [];\n    if (data.city) {\n      locationParts.push(data.city);\n    }\n    if (data.country) {\n      locationParts.push(data.country);\n    }\n    const location = locationParts.join(', ');\n\n    return {\n      type: 'user',\n      username: data.username,\n      url: data.url,\n      name: data.name,\n      thumbnail: data.images?.extra_large,\n      about: data.about,\n      location: location || undefined\n    };\n  }\n\n  static convertPlaylist(data: Playlist): PlaylistEntity {\n    return {\n      type: 'playlist',\n      id: data.id,\n      name: data.name,\n      description: data.description,\n      url: data.url,\n      owner: data.owner ? this.convertUser(data.owner) : undefined\n    };\n  }\n\n  static convertSlugLike(data: Category | Tag): SlugEntity {\n    return {\n      type: 'slug',\n      name: data.name,\n      slug: data.slug\n    };\n  }\n\n  static convertLiveStream(data: LiveStream): LiveStreamEntity {\n    return {\n      type: 'liveStream',\n      id: data.id,\n      name: data.name,\n      description: data.description,\n      status: data.status,\n      isLive: data.status === 'LIVE',\n      owner: data.owner ? this.convertUser(data.owner) : undefined,\n      thumbnail: data.images?.extra_large,\n      streams: data.streams\n    };\n  }\n}\n"]}