{"version":3,"file":"DiscoverViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/DiscoverViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import mixcloud from '../../../MixcloudContext';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport { ModelType } from '../../../model';\nimport { RenderedListItem } from './renderers/BaseRenderer';\nimport { DiscoverLoopFetchResult, DiscoverModelDiscoverParams, DiscoverResultsOrderBy, DiscoverType } from '../../../model/DiscoverModel';\nimport UIHelper from '../../../util/UIHelper';\nimport { SlugEntity } from '../../../entities/SlugEntity';\nimport ExplodableViewHandler from './ExplodableViewHandler';\nimport { FeaturedView } from './FeaturedViewHandler';\nimport ViewHelper from './ViewHelper';\n\nexport interface DiscoverView<T extends DiscoverType = 'all'> extends View {\n  name:\n    T extends 'all' ? 'discover' :\n    T extends 'featured' ? 'featured' :\n    never;\n\n  slug?: string;\n\n  orderBy?: DiscoverResultsOrderBy<T>;\n\n  country?:\n    T extends 'all' ? string :\n    T extends 'featured' ? 'undefined' :\n    never;\n\n  select?:\n    T extends 'all' ? 'orderBy' | 'slug' | 'country' :\n    T extends 'featured' ? 'orderBy' | 'slug' :\n    never;\n}\n\nexport default class DiscoverViewHandler<T extends DiscoverType = 'all'> extends ExplodableViewHandler<DiscoverView<T>> {\n\n  browse(): Promise<RenderedPage> {\n    const view = this.currentView;\n    if (view.select) {\n      return this.#browseDiscoverOptions(view.select);\n    }\n\n    return this.#browseDiscoverResults();\n  }\n\n  protected getListType(): DiscoverType {\n    return 'all';\n  }\n\n  protected getSwitchViewLinkData(selectedTags: SlugEntity[]) {\n    // \"View featured { tag } shows\"\n    const featuredView: FeaturedView = {\n      name: 'featured',\n      slug: selectedTags[0].slug\n    };\n    const tagNames = selectedTags.map((t) => t.name ).join(' &amp; ');\n    return {\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(featuredView)}`,\n      text: mixcloud.getI18n('MIXCLOUD_VIEW_FEATURED_SHOWS', tagNames)\n    };\n  }\n\n  protected getTitle(selectedTags: SlugEntity[] = [], orderBy?: DiscoverResultsOrderBy<any>, country?: string) {\n    const tagNames = selectedTags.map((t) => t.name).join(' &amp; ');\n    const countryName = country ? `(${country})` : '';\n    let i18nKey = 'MIXCLOUD_DISCOVER_TITLE';\n    switch (orderBy) {\n      case 'trending':\n        i18nKey += '_TRENDING';\n        break;\n      case 'popular':\n        i18nKey += '_POPULAR';\n        break;\n      case 'latest':\n        i18nKey += '_LATEST';\n        break;\n    }\n    const title = mixcloud.getI18n(i18nKey, tagNames, countryName);\n\n    const featuredLinkData = this.getSwitchViewLinkData(selectedTags);\n    const featuredLink = this.constructGoToViewLink(featuredLinkData.text, featuredLinkData.uri);\n\n    return UIHelper.constructListTitleWithLink(title, featuredLink, true);\n  }\n\n  protected getDiscoverModelParams() {\n    const view = this.currentView;\n\n    const params: DiscoverModelDiscoverParams<any> = {\n      list: this.getListType(),\n      slug: view.slug,\n      limit: view.inSection ? mixcloud.getConfigValue('itemsPerSection') : mixcloud.getConfigValue('itemsPerPage')\n    };\n\n    if (view.orderBy) {\n      params.orderBy = view.orderBy;\n    }\n\n    // 'country' only available with 'all' discovery results and 'orderBy: trending'\n    if (this.getListType() === 'all' && params.orderBy === 'trending' && view.country) {\n      (params as DiscoverModelDiscoverParams<'all'>).country = view.country;\n    }\n\n    if (view.pageRef) {\n      params.pageToken = view.pageRef.pageToken;\n      params.pageOffset = view.pageRef.pageOffset;\n    }\n\n    return params;\n  }\n\n  async #browseDiscoverResults(): Promise<RenderedPage> {\n    const view = this.currentView;\n\n    const lists: RenderedList[] = [];\n    const model = this.getModel(ModelType.Discover);\n    const discoverParams = this.getDiscoverModelParams();\n    const cloudcasts = await model.getDiscoverResults(discoverParams);\n\n    const discoverOptions = await model.getDiscoverOptions({\n      list: this.getListType(),\n      orderBy: cloudcasts.params.orderBy\n    });\n\n    // Sanitize getOptionList() params\n    const currentSelected: Record<string, any> = {\n      ...cloudcasts.params\n    };\n    const selectedTags = cloudcasts.selectedTags;\n    const ensureSlug = {\n      name: selectedTags.length > 0 ?\n        selectedTags.map((tag) => tag.name).join(', ') :\n        mixcloud.getI18n('MIXCLOUD_ALL_CATEGORIES'),\n      value: selectedTags.map((tag) => tag.slug).join('-')\n    };\n    currentSelected.slug = ensureSlug.value;\n    if (!discoverOptions.slug.values.some((s) => s.value === ensureSlug.value)) {\n      discoverOptions.slug.values.push(ensureSlug);\n    }\n\n    const optionList = await this.getOptionList({\n      getOptionBundle: async () => discoverOptions,\n      currentSelected\n    });\n    if (optionList) {\n      lists.push(optionList);\n    }\n\n    lists.push(this.getCloudcastList(cloudcasts, true));\n\n    let currentCountry: string | undefined;\n    if (this.getListType() === 'all') {\n      const _params = cloudcasts.params as DiscoverLoopFetchResult<'all'>['params'];\n      currentCountry = discoverOptions.country.values.find((c) => c.value === _params.country)?.name;\n    }\n\n    lists[0].title = UIHelper.addMixcloudIconToListTitle(\n      this.getTitle(\n        cloudcasts.selectedTags,\n        cloudcasts.params.orderBy,\n        currentCountry\n      ));\n\n    if (!UIHelper.supportsEnhancedTitles() && !view.inSection && cloudcasts.selectedTags.length > 0) {\n      // Compensate for loss of switch view link\n      const switchViewLinkData = this.getSwitchViewLinkData(cloudcasts.selectedTags);\n      const switchViewListItem: RenderedListItem = {\n        service: 'mixcloud',\n        type: 'item-no-menu',\n        title: switchViewLinkData.text,\n        uri: switchViewLinkData.uri,\n        icon: 'fa fa-arrow-circle-right'\n      };\n      lists.push({\n        availableListViews: [ 'list' ],\n        items: [ switchViewListItem ]\n      });\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n  }\n\n  #browseDiscoverOptions(option: string) {\n    return this.browseOptionValues({\n      getOptionBundle: () => this.getModel(ModelType.Discover).getDiscoverOptions({\n        list: this.getListType(),\n        orderBy: this.currentView.orderBy\n      }),\n      targetOption: option\n    });\n  }\n\n  protected async getTracksOnExplode() {\n    const cloudcasts = await this.getModel(ModelType.Discover)\n      .getDiscoverResults(this.getDiscoverModelParams());\n\n    return cloudcasts.items;\n  }\n}\n"]}