{"version":3,"file":"RootViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/RootViewHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAAgD;AAChD,0CAA2C;AAC3C,mEAA6D;AAC7D,wEAAgD;AAGhD,8EAAsD;AACtD,2CAA2C;AAO3C,MAAqB,eAAgB,SAAQ,yBAAyB;IAAtE;;;IAqDA,CAAC;IAnDC,KAAK,CAAC,MAAM;QACV,MAAM,CAAE,UAAU,EAAE,QAAQ,CAAE,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YACjD,uBAAA,IAAI,kEAAe,MAAnB,IAAI,CAAiB;YACrB,uBAAA,IAAI,gEAAa,MAAjB,IAAI,CAAe;SACpB,CAAC,CAAC;QAEH,OAAO;YACL,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;gBAClB,KAAK,EAAE;oBACL,GAAG,UAAU;oBACb,GAAG,QAAQ;iBACZ;aACF;SACF,CAAC;IACJ,CAAC;CAoCF;6EAlCC,KAAK;IACH,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3E,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,IAAI,CAAC,CAAC;IACrD,MAAM,KAAK,GAAmB,EAAE,CAAC;IACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;QAC/B,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAqB,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YAChF,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,QAAQ,EAAE,CAAC;gBACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,IAAI,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,kBAAQ,CAAC,sBAAsB,EAAE,EAAE,CAAC;YACtC,KAAK,GAAG,kBAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,oBAAS,CAAC,UAAU,CAAC,CAAC;YACxD,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC;QACD,KAAK,CAAC,IAAI,CAAC;YACT,KAAK;YACL,kBAAkB,EAAE,CAAE,MAAM,EAAE,MAAM,CAAE;YACtC,KAAK;SACN,CAAC,CAAC;IACL,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC,iCAED,KAAK;IACH,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,uBAAuB,CAAC;IAC/C,MAAM,OAAO,GAAG,4BAAkB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;IACpC,OAAO,IAAI,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC;AACtC,CAAC;kBApDkB,eAAe","sourcesContent":["import mixcloud from '../../../MixcloudContext';\nimport { ModelType } from '../../../model';\nimport UIHelper, { UI_STYLES } from '../../../util/UIHelper';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHandlerFactory from './ViewHandlerFactory';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport interface RootView extends View {\n  name: 'root';\n}\n\nexport default class RootViewHandler extends BaseViewHandler<RootView> {\n\n  async browse(): Promise<RenderedPage> {\n    const [ categories, featured ] = await Promise.all([\n      this.#getCategories(),\n      this.#getFeatured()\n    ]);\n\n    return {\n      navigation: {\n        prev: { uri: '/' },\n        lists: [\n          ...categories,\n          ...featured\n        ]\n      }\n    };\n  }\n\n  async #getCategories(): Promise<RenderedList[]> {\n    const categories = await this.getModel(ModelType.Discover).getCategories();\n    const renderer = this.getRenderer(RendererType.Slug);\n    const lists: RenderedList[] = [];\n    const sections = Object.keys(categories);\n    for (const section of sections) {\n      const items = categories[section].reduce<RenderedListItem[]>((result, category) => {\n        const rendered = renderer.renderToListItem(category);\n        if (rendered) {\n          result.push(rendered);\n        }\n        return result;\n      }, []);\n      let title = mixcloud.getI18n('MIXCLOUD_DISCOVER_SHOWS', section);\n      if (UIHelper.supportsEnhancedTitles()) {\n        title = UIHelper.styleText(title, UI_STYLES.TITLE_CASE);\n        title = UIHelper.addMixcloudIconToListTitle(title);\n      }\n      lists.push({\n        title,\n        availableListViews: [ 'list', 'grid' ],\n        items\n      });\n    }\n\n    return lists;\n  }\n\n  async #getFeatured() {\n    const uri = `${this.uri}/featured@inSection=1`;\n    const handler = ViewHandlerFactory.getHandler(uri);\n    const page = await handler.browse();\n    return page.navigation?.lists || [];\n  }\n}\n"]}