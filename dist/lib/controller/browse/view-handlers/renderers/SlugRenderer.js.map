{"version":3,"file":"SlugRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/SlugRenderer.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,gDAAwB;AACxB,4CAAoB;AACpB,sDAA8B;AAC9B,kEAAgE;AAEhE,yEAAiD;AAEjD,+DAAuC;AAEvC,MAAqB,YAAa,SAAQ,sBAAwB;IAAlE;;;IAgDA,CAAC;IA9CC,gBAAgB,CAAC,IAAgB;QAC/B,MAAM,YAAY,GAAiB;YACjC,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;QACF,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,YAAY,CAAC,EAAE;SAC3E,CAAC;QACF,MAAM,QAAQ,GAAG,uBAAA,IAAI,0DAAa,MAAjB,IAAI,EAAc,IAAI,CAAC,CAAC;QACzC,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;aACI,CAAC;YACJ,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC;QAC5B,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CA2BF;wGAzBc,IAAgB;IAC3B,MAAM,QAAQ,GAAG,GAAG,IAAA,iBAAO,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC;IAC3D,MAAM,OAAO,GAAG,mDAAmD,QAAQ,EAAE,CAAC;IAC9E,MAAM,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,sCAAsC,QAAQ,EAAE,CAAC,CAAC;IAC3F,IAAI,OAAO,GAAkB,wBAAwB,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;IAEnF,IAAI,MAAM,CAAC;IACX,IAAI,CAAC;QACH,MAAM,GAAG,YAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IACD,OAAO,GAAG,EAAE,CAAC;QACX,MAAM,GAAG,KAAK,CAAC;IACjB,CAAC;IAED,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,IAAI,CAAC;YACH,OAAO,GAAG,kBAAQ,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC;QACD,OAAO,GAAG,EAAE,CAAC;YACX,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;kBA/CkB,YAAY","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport slugify from 'slugify';\nimport BaseRenderer, { RenderedListItem } from './BaseRenderer';\nimport { SlugEntity } from '../../../../entities/SlugEntity';\nimport UIHelper from '../../../../util/UIHelper';\nimport { DiscoverView } from '../DiscoverViewHandler';\nimport ViewHelper from '../ViewHelper';\n\nexport default class SlugRenderer extends BaseRenderer<SlugEntity> {\n\n  renderToListItem(slug: SlugEntity): RenderedListItem | null {\n    const discoverView: DiscoverView = {\n      name: 'discover',\n      slug: slug.slug\n    };\n    const result: RenderedListItem = {\n      service: 'mixcloud',\n      type: 'folder',\n      title: slug.name,\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(discoverView)}`\n    };\n    const albumart = this.#getAlbumArt(slug);\n    if (albumart) {\n      result.albumart = albumart;\n    }\n    else {\n      result.icon = 'fa fa-tag';\n    }\n    return result;\n  }\n\n  #getAlbumArt(slug: SlugEntity) {\n    const filename = `${slugify(slug.name).toLowerCase()}.png`;\n    const srcPath = `music_service/mixcloud/dist/assets/images/slugs/${filename}`;\n    const realPath = path.resolve(__dirname, `../../../../../assets/images/slugs/${filename}`);\n    let retPath: string | null = `/albumart?sourceicon=${encodeURIComponent(srcPath)}`;\n\n    let exists;\n    try {\n      exists = fs.existsSync(realPath);\n    }\n    catch (err) {\n      exists = false;\n    }\n\n    if (!exists) {\n      try {\n        retPath = UIHelper.getRandomAlbumArtFromDir('tags');\n      }\n      catch (err) {\n        retPath = null;\n      }\n    }\n\n    return retPath;\n  }\n}\n"]}