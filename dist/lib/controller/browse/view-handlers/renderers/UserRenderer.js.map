{"version":3,"file":"UserRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/UserRenderer.ts"],"names":[],"mappings":";;;;;AAAA,kFAAmD;AACnD,kEAAgF;AAGhF,+DAAuC;AAEvC,MAAqB,YAAa,SAAQ,sBAAwB;IAEhE,gBAAgB,CAAC,IAAgB;QAC/B,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;YACjC,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,QAAQ,CAAC,EAAE;SACvE,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,IAAgB;QAC7B,MAAM,MAAM,GAAmB;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;YACjC,MAAM,EAAE,yBAAQ,CAAC,OAAO,CAAC,sBAAsB,CAAC;YAChD,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAtCD,+BAsCC","sourcesContent":["import mixcloud from '../../../../MixcloudContext';\nimport BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\nimport { UserEntity } from '../../../../entities/UserEntity';\nimport { UserView } from '../UserViewHandler';\nimport ViewHelper from '../ViewHelper';\n\nexport default class UserRenderer extends BaseRenderer<UserEntity> {\n\n  renderToListItem(user: UserEntity): RenderedListItem | null {\n    const userView: UserView = {\n      name: 'user',\n      username: user.username\n    };\n    const result: RenderedListItem = {\n      service: 'mixcloud',\n      type: 'folder',\n      title: user.name || user.username,\n      albumart: user.thumbnail,\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(userView)}`\n    };\n\n    if (user.location) {\n      result.artist = user.location;\n    }\n\n    return result;\n  }\n\n  renderToHeader(user: UserEntity): RenderedHeader | null {\n    const result: RenderedHeader = {\n      uri: this.uri,\n      service: 'mixcloud',\n      type: 'song',\n      title: user.name || user.username,\n      artist: mixcloud.getI18n('MIXCLOUD_HEADER_USER'),\n      albumart: user.thumbnail\n    };\n\n    if (user.location) {\n      result.year = user.location;\n    }\n\n    return result;\n  }\n}\n"]}