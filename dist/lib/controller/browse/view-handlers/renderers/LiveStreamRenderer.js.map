{"version":3,"file":"LiveStreamRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/LiveStreamRenderer.ts"],"names":[],"mappings":";;;;;AAAA,kEAAgE;AAEhE,kFAAmD;AACnD,+DAAuC;AAIvC,MAAqB,kBAAmB,SAAQ,sBAA8B;IAE5E,gBAAgB,CACd,UAA4B,EAC5B,SAA0C,QAAQ;QAElD,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,IAA8B,CAAC;QACnC,IAAI,KAAa,CAAC;QAClB,IAAI,KAAyB,CAAC;QAC9B,IAAI,MAA0B,CAAC;QAC/B,IAAI,QAA4B,CAAC;QACjC,IAAI,QAA4B,CAAC;QACjC,IAAI,IAAwB,CAAC;QAC7B,IAAI,GAAW,CAAC;QAEhB,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,QAAQ;gBACX,IAAI,GAAG,QAAQ,CAAC;gBAChB,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC;gBACxB,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;gBACjD,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,IAAI,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC;gBAC9D,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC;gBAEhC,MAAM,QAAQ,GAAa;oBACzB,IAAI,EAAE,MAAM;oBACZ,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACnC,UAAU,EAAE,YAAY;iBACzB,CAAC;gBACF,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACxE,MAAM;YAER,KAAK,oBAAoB;gBACvB,MAAM,cAAc,GAAmB;oBACrC,IAAI,EAAE,YAAY;oBAClB,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ;iBACpC,CAAC;gBACF,MAAM,OAAO,GAAG,oBAAU,CAAC,qBAAqB,CAAC,CAAE,GAAG,IAAI,CAAC,aAAa,EAAE,cAAc,CAAE,CAAC,CAAC;gBAC5F,IAAI,GAAG,MAAM,CAAC;gBACd,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC;gBACxB,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,IAAI,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC;gBAC9D,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC;gBAChC,GAAG,GAAG,OAAO,CAAC;gBACd,MAAM;QACV,CAAC;QAED,OAAO;YACL,OAAO,EAAE,UAAU;YACnB,IAAI;YACJ,KAAK;YACL,KAAK;YACL,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,IAAI;YACJ,GAAG;SACJ,CAAC;IACJ,CAAC;CACF;AA7DD,qCA6DC","sourcesContent":["import BaseRenderer, { RenderedListItem } from './BaseRenderer';\nimport { LiveStreamEntity } from '../../../../entities/LiveStreamEntity';\nimport mixcloud from '../../../../MixcloudContext';\nimport ViewHelper from '../ViewHelper';\nimport { UserView } from '../UserViewHandler';\nimport { LiveStreamView } from '../LiveStreamViewHandler';\n\nexport default class LiveStreamRenderer extends BaseRenderer<LiveStreamEntity> {\n\n  renderToListItem(\n    liveStream: LiveStreamEntity,\n    asType: 'folder' | 'playLiveStreamItem' = 'folder'): RenderedListItem | null {\n\n    if (!liveStream.isLive || !liveStream.owner) {\n      return null;\n    }\n\n    let type: RenderedListItem['type'];\n    let title: string;\n    let album: string | undefined;\n    let artist: string | undefined;\n    let duration: number | undefined;\n    let albumart: string | undefined;\n    let icon: string | undefined;\n    let uri: string;\n\n    switch (asType) {\n      case 'folder':\n        type = 'folder';\n        title = liveStream.name;\n        album = mixcloud.getI18n('MIXCLOUD_LIVE_STREAM');\n        artist = liveStream.owner?.name || liveStream.owner?.username;\n        albumart = liveStream.thumbnail;\n\n        const userView: UserView = {\n          name: 'user',\n          username: liveStream.owner.username,\n          playTarget: 'liveStream'\n        };\n        uri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(userView)}`;\n        break;\n\n      case 'playLiveStreamItem':\n        const liveStreamView: LiveStreamView = {\n          name: 'liveStream',\n          username: liveStream.owner.username\n        };\n        const playUri = ViewHelper.constructUriFromViews([ ...this.previousViews, liveStreamView ]);\n        type = 'song';\n        title = liveStream.name;\n        artist = liveStream.owner?.name || liveStream.owner?.username;\n        albumart = liveStream.thumbnail;\n        uri = playUri;\n        break;\n    }\n\n    return {\n      service: 'mixcloud',\n      type,\n      title,\n      album,\n      artist,\n      duration,\n      albumart,\n      icon,\n      uri\n    };\n  }\n}\n"]}