{"version":3,"file":"FeaturedViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/FeaturedViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,+EAAgD;AAEhD,sEAA8C;AAE9C,gFAA0E;AAC1E,8DAAsC;AAItC,MAAqB,mBAAoB,SAAQ,6BAA+B;IAEpE,WAAW;QACnB,OAAO,UAAU,CAAC;IACpB,CAAC;IAES,QAAQ,CAAC,YAA0B;QAC3C,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,IAAI,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3D,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;YAClE,MAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAC7F,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,qBAAqB,CAAC,YAA0B;QAC9C,2BAA2B;QAC3B,MAAM,YAAY,GAAiB;YACjC,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI;SAC3B,CAAC;QACF,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,OAAO;YACL,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,YAAY,CAAC,EAAE;YAC1E,IAAI,EAAE,yBAAQ,CAAC,OAAO,CAAC,yBAAyB,EAAE,QAAQ,CAAC;SAC5D,CAAC;IACJ,CAAC;CACF;AA7BD,sCA6BC","sourcesContent":["import mixcloud from '../../../MixcloudContext';\nimport { DiscoverType } from '../../../model/DiscoverModel';\nimport UIHelper from '../../../util/UIHelper';\nimport { SlugEntity } from '../../../entities/SlugEntity';\nimport DiscoverViewHandler, { DiscoverView } from './DiscoverViewHandler';\nimport ViewHelper from './ViewHelper';\n\nexport type FeaturedView = DiscoverView<'featured'>;\n\nexport default class FeaturedViewHandler extends DiscoverViewHandler<'featured'> {\n\n  protected getListType(): DiscoverType {\n    return 'featured';\n  }\n\n  protected getTitle(selectedTags: SlugEntity[]): string {\n    const tagNames = selectedTags.map((t) => t.name).join(' &amp; ');\n    let title = mixcloud.getI18n('MIXCLOUD_FEATURED_TITLE', tagNames);\n    if (!this.currentView.inSection && selectedTags.length > 0) {\n      const discoverLinkData = this.getSwitchViewLinkData(selectedTags);\n      const discoverLink = this.constructGoToViewLink(discoverLinkData.text, discoverLinkData.uri);\n      title = UIHelper.constructListTitleWithLink(title, discoverLink, true);\n    }\n    return title;\n  }\n\n  getSwitchViewLinkData(selectedTags: SlugEntity[]) {\n    // \"View all { tag } shows\"\n    const discoverView: DiscoverView = {\n      name: 'discover',\n      slug: selectedTags[0].slug\n    };\n    const tagNames = selectedTags.map((t) => t.name).join(' &amp; ');\n    return {\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(discoverView)}`,\n      text: mixcloud.getI18n('MIXCLOUD_VIEW_ALL_SHOWS', tagNames)\n    };\n  }\n}\n"]}