{"version":3,"file":"BaseViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/BaseViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import Model, { ModelType } from '../../../model';\nimport BaseModel, { OptionBundle } from '../../../model/BaseModel';\nimport CloudcastModel, { GetCloudcastsLoopFetchResult, GetCloudcastsType } from '../../../model/CloudcastModel';\nimport DiscoverModel from '../../../model/DiscoverModel';\nimport LiveStreamModel from '../../../model/LiveStreamModel';\nimport PlaylistModel from '../../../model/PlaylistModel';\nimport TagModel from '../../../model/TagModel';\nimport UserModel from '../../../model/UserModel';\nimport UIHelper, { UILink, UI_STYLES } from '../../../util/UIHelper';\nimport { ExplodedTrackInfo } from './ExplodableViewHandler';\nimport View, { PageRef } from './View';\nimport ViewHandler, { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport Renderer, { RendererType } from './renderers';\nimport BaseRenderer, { RenderedListItem } from './renderers/BaseRenderer';\nimport CloudcastRenderer from './renderers/CloudcastRenderer';\nimport LiveStreamRenderer from './renderers/LiveStreamRenderer';\nimport PlaylistRenderer from './renderers/PlaylistRenderer';\nimport SlugRenderer from './renderers/SlugRenderer';\nimport UserRenderer from './renderers/UserRenderer';\n\nexport default class BaseViewHandler<V extends View> implements ViewHandler {\n\n  #uri: string;\n  #currentView: V;\n  #previousViews: View[];\n  #models: Partial<Record<ModelType, BaseModel>>;\n  #renderers: Partial<Record<RendererType, BaseRenderer<any>>>;\n\n  constructor(uri: string, currentView: V, previousViews: View[]) {\n    this.#uri = uri;\n    this.#currentView = currentView;\n    this.#previousViews = previousViews;\n    this.#models = {};\n    this.#renderers = {};\n  }\n\n  async browse(): Promise<RenderedPage> {\n    return {};\n  }\n\n  explode(): Promise<ExplodedTrackInfo[]> {\n    throw Error('Operation not supported');\n  }\n\n  get uri(): string {\n    return this.#uri;\n  }\n\n  get currentView(): V {\n    return this.#currentView;\n  }\n\n  get previousViews(): View[] {\n    return this.#previousViews;\n  }\n\n  protected getModel(type: ModelType.Cloudcast): CloudcastModel;\n  protected getModel(type: ModelType.Discover): DiscoverModel;\n  protected getModel(type: ModelType.Playlist): PlaylistModel;\n  protected getModel(type: ModelType.Tag): TagModel;\n  protected getModel(type: ModelType.User): UserModel;\n  protected getModel(type: ModelType.LiveStream): LiveStreamModel;\n  protected getModel(type: ModelType) {\n    if (!this.#models[type]) {\n      let model;\n      switch (type) {\n        case ModelType.Cloudcast:\n          model = Model.getInstance(ModelType.Cloudcast);\n          break;\n        case ModelType.Discover:\n          model = Model.getInstance(ModelType.Discover);\n          break;\n        case ModelType.Playlist:\n          model = Model.getInstance(ModelType.Playlist);\n          break;\n        case ModelType.Tag:\n          model = Model.getInstance(ModelType.Tag);\n          break;\n        case ModelType.User:\n          model = Model.getInstance(ModelType.User);\n          break;\n        case ModelType.LiveStream:\n          model = Model.getInstance(ModelType.LiveStream);\n          break;\n        default:\n          throw Error(`Unknown model type: ${type}`);\n      }\n      this.#models[type] = model;\n    }\n\n    return this.#models[type];\n  }\n\n  protected getRenderer(type: RendererType.Cloudcast): CloudcastRenderer;\n  protected getRenderer(type: RendererType.Playlist): PlaylistRenderer;\n  protected getRenderer(type: RendererType.Slug): SlugRenderer;\n  protected getRenderer(type: RendererType.User): UserRenderer;\n  protected getRenderer(type: RendererType.LiveStream): LiveStreamRenderer;\n  protected getRenderer(type: RendererType) {\n    if (!this.#renderers[type]) {\n      let renderer;\n      switch (type) {\n        case RendererType.Cloudcast:\n          renderer = Renderer.getInstance(RendererType.Cloudcast, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Playlist:\n          renderer = Renderer.getInstance(RendererType.Playlist, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Slug:\n          renderer = Renderer.getInstance(RendererType.Slug, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.User:\n          renderer = Renderer.getInstance(RendererType.User, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.LiveStream:\n          renderer = Renderer.getInstance(RendererType.LiveStream, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        default:\n          throw Error(`Unknown renderer type: ${type}`);\n      }\n      this.#renderers[type] = renderer;\n    }\n    return this.#renderers[type];\n  }\n\n  protected constructPrevUri(): string {\n    const segments = this.#previousViews.map(((view) => ViewHelper.constructUriSegmentFromView(view)));\n\n    const currentView = this.#currentView;\n    if (currentView.pageRef) {\n      const newView = { ...currentView };\n      delete newView.pageRef;\n      delete newView.prevPageRefs;\n\n      if (currentView.prevPageRefs) {\n        const prevPageRefs = [ ...currentView.prevPageRefs ];\n        const prevPageRef = prevPageRefs.pop();\n        if (prevPageRef && prevPageRefs.length > 0) {\n          newView.prevPageRefs = prevPageRefs;\n        }\n        if (prevPageRef) {\n          newView.pageRef = prevPageRef;\n        }\n      }\n\n      segments.push(ViewHelper.constructUriSegmentFromView(newView));\n    }\n\n    return segments.join('/');\n  }\n\n  protected constructNextUri(nextPageRef: PageRef): string {\n    const segments = this.#previousViews.map(((view) => ViewHelper.constructUriSegmentFromView(view)));\n\n    const newView = { ...this.#currentView };\n    if (this.#currentView.prevPageRefs) {\n      newView.prevPageRefs = [ ...this.#currentView.prevPageRefs ];\n    }\n    else {\n      newView.prevPageRefs = [];\n    }\n    if (newView.pageRef) {\n      newView.prevPageRefs.push(newView.pageRef);\n    }\n    newView.pageRef = nextPageRef;\n\n    segments.push(ViewHelper.constructUriSegmentFromView(newView));\n\n    return segments.join('/');\n  }\n\n  protected constructNextPageItem(nextUri: string, title?: string): RenderedListItem {\n    if (!title) {\n      title = UIHelper.getMoreText();\n    }\n    return {\n      service: 'mixcloud',\n      type: 'item-no-menu',\n      title,\n      uri: `${nextUri}@noExplode=1`,\n      icon: 'fa fa-arrow-circle-right'\n    };\n  }\n\n  protected constructPrevViewLink(text: string) {\n    const backUri = ViewHelper.constructUriFromViews(this.previousViews);\n    const icon: UILink['icon'] = {\n      type: 'fa',\n      class: 'fa fa-arrow-circle-left',\n      color: '#54c688'\n    };\n    return UIHelper.constructBrowsePageLink(\n      text,\n      backUri,\n      icon\n    );\n  }\n\n  constructPageRef(pageToken?: string | null, pageOffset?: number): PageRef | null {\n    if (!pageToken && !pageOffset) {\n      return null;\n    }\n    return {\n      pageToken: pageToken || '',\n      pageOffset: pageOffset || 0\n    };\n  }\n\n  protected constructGoToViewLink(text: string, uri: string): UILink {\n    const icon: UILink['icon'] = {\n      type: 'fa',\n      class: 'fa fa-arrow-circle-right',\n      float: 'right',\n      color: '#54c688'\n    };\n    return UIHelper.constructBrowsePageLink(\n      text,\n      uri,\n      icon\n    );\n  }\n\n  protected getCloudcastList<T extends GetCloudcastsType>(cloudcasts: GetCloudcastsLoopFetchResult<T>, showMoreFromUser = false): RenderedList {\n    const renderer = this.getRenderer(RendererType.Cloudcast);\n    const items = cloudcasts.items.reduce<RenderedListItem[]>((result, cloudcast) => {\n      const rendered = renderer.renderToListItem(cloudcast, 'folder', showMoreFromUser);\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n    const nextPageRef = this.constructPageRef(cloudcasts.nextPageToken, cloudcasts.nextPageOffset);\n    if (nextPageRef) {\n      const nextUri = this.constructNextUri(nextPageRef);\n      items.push(this.constructNextPageItem(nextUri));\n    }\n    return {\n      availableListViews: [ 'list', 'grid' ],\n      items\n    };\n  }\n\n  protected async browseOptionValues<T extends OptionBundle<any>>(params: {\n    getOptionBundle: () => Promise<T>,\n    targetOption: string\n  }): Promise<RenderedPage> {\n\n    const option = params.targetOption;\n    const bundle = await params.getOptionBundle();\n    const optBundleEntry = bundle[option];\n\n    if (!optBundleEntry) {\n      throw Error(`Option ${option} not found!`);\n    }\n\n    const currentValue = this.currentView[option];\n    const items = optBundleEntry.values.reduce<RenderedListItem[]>((result, opt) => {\n      const isSelected = opt.value === currentValue;\n      const title = isSelected ? UIHelper.styleText(opt.name, UI_STYLES.LIST_ITEM_SELECTED) : opt.name;\n      result.push({\n        service: 'mixcloud',\n        type: 'item-no-menu',\n        title,\n        icon: isSelected ? 'fa fa-check' : 'fa',\n        uri: this.#constructSelectOptionValueUri(option, opt.value)\n      });\n      return result;\n    }, []);\n\n    let listTitle = optBundleEntry.name;\n    listTitle = UIHelper.addIconToListTitle(optBundleEntry.icon, listTitle);\n    const lists: RenderedList[] = [ {\n      title: listTitle,\n      availableListViews: [ 'list' ],\n      items\n    } ];\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n  }\n\n  #constructSelectOptionValueUri(option: keyof V, value: any) {\n    const newView = { ...this.currentView };\n    if (newView[option] !== value) {\n      delete newView.pageRef;\n      delete newView.prevPageRefs;\n      newView[option] = value;\n    }\n    delete newView.select;\n\n    return ViewHelper.constructUriFromViews([ ...this.previousViews, newView ]);\n  }\n\n  protected async getOptionList<T extends OptionBundle<any>>(params: {\n    getOptionBundle: () => Promise<T>,\n    currentSelected: { [K in keyof T]?: T[K]['values'][number]['value'] },\n    showOptionName?: (option: keyof T) => boolean\n  }): Promise<RenderedList | null> {\n\n    const baseUri = ViewHelper.constructUriFromViews([\n      ...this.previousViews,\n      { ...this.currentView, ...params.currentSelected }\n    ]);\n    const items: RenderedListItem[] = [];\n\n    const bundle = await params.getOptionBundle();\n    for (const optKey of Object.keys(bundle)) {\n      const currentValue = params.currentSelected[optKey as keyof T];\n      if (currentValue !== undefined) {\n        const optBundleEntry = bundle[optKey as keyof T];\n        const currentOptFromBundle = optBundleEntry.values.find((opt) => opt.value === currentValue);\n        if (currentOptFromBundle) {\n          let title = currentOptFromBundle.name;\n          if (params.showOptionName && params.showOptionName(optKey as keyof T)) {\n            title = UIHelper.addTextBefore(title, `${optBundleEntry.name}: `, UI_STYLES.PARAMS_LIST_ITEM_NAME);\n          }\n          items.push({\n            service: 'mixcloud',\n            type: 'item-no-menu',\n            title,\n            icon: optBundleEntry.icon,\n            uri: `${baseUri}@select=${optKey}`\n          });\n        }\n      }\n    }\n\n    if (items.length > 0) {\n      return {\n        availableListViews: [ 'list' ],\n        items\n      };\n    }\n\n    return null;\n  }\n\n}\n"]}