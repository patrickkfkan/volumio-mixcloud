{"version":3,"file":"CloudcastViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/CloudcastViewHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAAgD;AAChD,0CAA2C;AAE3C,mEAAqE;AACrE,oFAA4D;AAI5D,8DAAsC;AACtC,2CAA2C;AA4B3C,MAAqB,oBAAqB,SAAQ,+BAAoC;IAAtF;;;IAmTA,CAAC;IAjTC,KAAK,CAAC,MAAM;QACV,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,OAAO,uBAAA,IAAI,8EAAiB,MAArB,IAAI,EAAkB,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,CAAC;aACI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,OAAO,uBAAA,IAAI,yFAA4B,MAAhC,IAAI,EAA6B,IAAI,CAAC,MAAM,CAAC,CAAC;YACvD,CAAC;YACD,OAAO,uBAAA,IAAI,8EAAiB,MAArB,IAAI,EAAkB,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9C,CAAC;aACI,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACzB,OAAO,uBAAA,IAAI,kFAAqB,MAAzB,IAAI,EAAsB,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,CAAC;aACI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,OAAO,uBAAA,IAAI,uFAA0B,MAA9B,IAAI,EAA2B,IAAI,CAAC,MAAM,CAAC,CAAC;YACrD,CAAC;YACD,OAAO,uBAAA,IAAI,kFAAqB,MAAzB,IAAI,EAAsB,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC;QAED,MAAM,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IA+OS,KAAK,CAAC,8BAA8B;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7D,OAAO,SAAS,IAAI,EAAE,CAAC;QACzB,CAAC;aACI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,MAAM,eAAe,GAAsC;gBACzD,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,yBAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;aAC/C,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACnD,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACvD,CAAC;YAED,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;gBAC/B,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACzC,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YAC9D,OAAO,UAAU,CAAC,KAAK,CAAC;QAC1B,CAAC;aACI,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACzB,MAAM,eAAe,GAAsC;gBACzD,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,KAAK,EAAE,yBAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;aAC/C,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACnD,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACvD,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YAC9D,OAAO,UAAU,CAAC,KAAK,CAAC;QAC1B,CAAC;QAED,MAAM,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;CACF;yFAxRC,KAAK,gDAAkB,WAAmB;IACxC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;IAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,SAAS,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACxD,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,MAAM,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,KAAK,GAAmB,EAAE,CAAC;IAEjC,MAAM,YAAY,GAAG,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;IAC1E,IAAI,YAAY,EAAE,CAAC;QACjB,KAAK,CAAC,IAAI,CAAC;YACT,kBAAkB,EAAE,CAAE,MAAM,CAAE;YAC9B,KAAK,EAAE,CAAE,YAAY,CAAE;SACxB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;QAC7C,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ;SACnC,CAAC;QACF,MAAM,gBAAgB,GAAqB;YACzC,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,yBAAQ,CAAC,OAAO,CAAC,oBAAoB,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/F,IAAI,EAAE,mBAAmB;YACzB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,QAAQ,CAAC,cAAc;SACnF,CAAC;QACF,KAAK,CAAC,IAAI,CAAC;YACT,kBAAkB,EAAE,CAAE,MAAM,CAAE;YAC9B,KAAK,EAAE,CAAE,gBAAgB,CAAE;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,IAAI,kBAAQ,CAAC,sBAAsB,EAAE,IAAI,SAAS,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC3E,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,MAAM,IAAI,GAAW;YACnB,GAAG,EAAE,SAAS,CAAC,GAAG;YAClB,IAAI,EAAE,yBAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC;YACjD,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;YAC1B,KAAK,EAAE,oBAAS,CAAC,SAAS;YAC1B,MAAM,EAAE,QAAQ;SACjB,CAAC;QACF,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,SAAS,CAAC,WAAW,EAAE,CAAC;YAC1B,KAAK,IAAI,kBAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,oBAAS,CAAC,WAAW,CAAC,CAAC;QAC5E,CAAC;QACD,IAAI,SAAS,CAAC,WAAW,EAAE,CAAC;YAC1B,KAAK,GAAG,kBAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QACpD,CAAC;aACI,CAAC;YACJ,KAAK,GAAG,kBAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,oCAAoC,CAAC,CAAC;QAC1E,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,OAAO;QACL,UAAU,EAAE;YACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACtC,IAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;YACxC,KAAK;SACN;KACF,CAAC;AACJ,CAAC,0CAED,KAAK,gDAAkB,QAAgB;IACrC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;IAE9B,MAAM,eAAe,GAAsC;QACzD,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;KAC7G,CAAC;IACF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACnD,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACvD,CAAC;IACD,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACzC,CAAC;IAED,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;IAChD,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;IAE1D,MAAM,CAAE,UAAU,EAAE,IAAI,CAAE,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAC7C,cAAc,CAAC,aAAa,CAAC,eAAe,CAAC;QAC7C,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;KAC5B,CAAC,CAAC;IAEH,MAAM,KAAK,GAAmB,EAAE,CAAC;IAEjC,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAChC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC;YAC1C,eAAe,EAAE,KAAK,IAAI,EAAE,CAAC,SAAS,CAAC,eAAe,EAAE;YACxD,eAAe,EAAE,UAAU,CAAC,MAAM;SACnC,CAAC,CAAC;QAEH,IAAI,UAAU,EAAE,CAAC;YACf,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzB,CAAC;QAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;QAE9C,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,yBAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACzF,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAED,OAAO;QACL,UAAU,EAAE;YACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACtC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YACjF,KAAK;SACN;KACF,CAAC;AACJ,CAAC,qDAGD,KAAK,2DAA6B,MAAc;IAC9C,OAAO,IAAI,CAAC,kBAAkB,CAAC;QAC7B,eAAe,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE;QAC5E,YAAY,EAAE,MAAM;KACrB,CAAC,CAAC;AACL,CAAC,mDAED,KAAK,yDAA2B,MAAc;IAC5C,OAAO,IAAI,CAAC,kBAAkB,CAAC;QAC7B,eAAe,EAAE,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE;QAClF,YAAY,EAAE,MAAM;KACrB,CAAC,CAAC;AACL,CAAC,8CAED,KAAK,oDAAsB,UAAkB;IAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;IAE9B,MAAM,eAAe,GAAsC;QACzD,UAAU;QACV,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;KAC7G,CAAC;IACF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACnD,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACvD,CAAC;IAED,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC;IACxD,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;IAE1D,MAAM,CAAE,UAAU,EAAE,QAAQ,CAAE,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACjD,cAAc,CAAC,aAAa,CAAC,eAAe,CAAC;QAC7C,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC;KACtC,CAAC,CAAC;IAEH,MAAM,KAAK,GAAmB,CAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAE,CAAC;IAEpE,IAAI,kBAAQ,CAAC,sBAAsB,EAAE,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC;QACvD,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,MAAM,IAAI,GAAW;YACnB,GAAG,EAAE,QAAQ,CAAC,GAAG;YACjB,IAAI,EAAE,yBAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC;YACrD,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;YAC1B,KAAK,EAAE,oBAAS,CAAC,SAAS;YAC1B,MAAM,EAAE,QAAQ;SACjB,CAAC;QACF,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;YACzB,KAAK,IAAI,kBAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,oBAAS,CAAC,WAAW,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;YACzB,KAAK,GAAG,kBAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QACpD,CAAC;aACI,CAAC;YACJ,KAAK,GAAG,kBAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,oCAAoC,CAAC,CAAC;QAC1E,CAAC;QACD,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,OAAO;QACL,UAAU,EAAE;YACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACtC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;YAC7F,KAAK;SACN;KACF,CAAC;AACJ,CAAC,8CAED,KAAK,oDAAsB,QAAgB;IACzC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;IAE9B,MAAM,eAAe,GAAsC;QACzD,QAAQ;QACR,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,yBAAQ,CAAC,cAAc,CAAC,cAAc,CAAC;KAC7G,CAAC;IACF,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACnD,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;IACvD,CAAC;IACD,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;QACpC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACnD,CAAC;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;IACjD,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC9D,MAAM,KAAK,GAAmB,EAAE,CAAC;IAEjC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC;QAC1C,eAAe,EAAE,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE;QACrD,eAAe,EAAE,UAAU,CAAC,MAAM;QAClC,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI;KAC3B,CAAC,CAAC;IACH,IAAI,UAAU,EAAE,CAAC;QACf,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAI,KAAK,CAAC;IACV,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,kBAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;IACzG,CAAC;SACI,CAAC;QACJ,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,kBAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;IACrI,CAAC;IACD,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAQ,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;IAE5D,OAAO;QACL,UAAU,EAAE;YACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACtC,KAAK;SACN;KACF,CAAC;AACJ,CAAC;kBAtQkB,oBAAoB","sourcesContent":["import mixcloud from '../../../MixcloudContext';\nimport { ModelType } from '../../../model';\nimport { CloudcastModelGetCloudcastsParams } from '../../../model/CloudcastModel';\nimport UIHelper, { UILink, UI_STYLES } from '../../../util/UIHelper';\nimport ExplodableViewHandler from './ExplodableViewHandler';\nimport { UserView } from './UserViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport interface CloudcastView extends View {\n  name: 'cloudcast' | 'cloudcasts';\n\n  cloudcastId?: string;\n\n  showMoreFromUser?: '1';\n\n  // User shows\n  username?: string;\n  orderBy?: CloudcastModelGetCloudcastsParams['orderBy'];\n\n  // Playlist items\n  playlistId?: string;\n\n  // Search\n  keywords?: string;\n  dateUploaded?: CloudcastModelGetCloudcastsParams['dateUploaded'];\n\n  // User shows / search - list options\n  select?: 'dateUploaded' | 'orderBy';\n\n  // For Goto\n  owner?: string;\n}\n\nexport default class CloudcastViewHandler extends ExplodableViewHandler<CloudcastView> {\n\n  async browse(): Promise<RenderedPage> {\n    const view = this.currentView;\n    if (view.cloudcastId) {\n      return this.#browseCloudcast(view.cloudcastId);\n    }\n    else if (view.username) {\n      if (view.select) {\n        return this.#browseUserShowOptionValues(view.select);\n      }\n      return this.#browseUserShows(view.username);\n\n    }\n    else if (view.playlistId) {\n      return this.#browsePlaylistItems(view.playlistId);\n    }\n    else if (view.keywords) {\n      if (view.select) {\n        return this.#browseSearchOptionValues(view.select);\n      }\n      return this.#browseSearchResults(view.keywords);\n    }\n\n    throw Error('Operation not supported');\n  }\n\n  async #browseCloudcast(cloudcastId: string): Promise<RenderedPage> {\n    const view = this.currentView;\n    const model = this.getModel(ModelType.Cloudcast);\n    const renderer = this.getRenderer(RendererType.Cloudcast);\n    const cloudcast = await model.getCloudcast(cloudcastId);\n    if (!cloudcast) {\n      throw Error('Cloudcast does not exist!');\n    }\n\n    const lists: RenderedList[] = [];\n\n    const playShowItem = renderer.renderToListItem(cloudcast, 'playShowItem');\n    if (playShowItem) {\n      lists.push({\n        availableListViews: [ 'list' ],\n        items: [ playShowItem ]\n      });\n    }\n\n    if (view.showMoreFromUser && cloudcast.owner) {\n      const userView: UserView = {\n        name: 'user',\n        username: cloudcast.owner.username\n      };\n      const moreFromUserItem: RenderedListItem = {\n        service: 'mixcloud',\n        type: 'item-no-menu',\n        title: mixcloud.getI18n('MIXCLOUD_MORE_FROM', cloudcast.owner.name || cloudcast.owner.username),\n        icon: 'fa fa-arrow-right',\n        uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(userView)}@noExplode=1`\n      };\n      lists.push({\n        availableListViews: [ 'list' ],\n        items: [ moreFromUserItem ]\n      });\n    }\n\n    if (UIHelper.supportsEnhancedTitles() && cloudcast.url && lists.length > 0) {\n      let title = '';\n      const link: UILink = {\n        url: cloudcast.url,\n        text: mixcloud.getI18n('MIXCLOUD_VIEW_LINK_SHOW'),\n        icon: { type: 'mixcloud' },\n        style: UI_STYLES.VIEW_LINK,\n        target: '_blank'\n      };\n      title = UIHelper.constructListTitleWithLink('', link, true);\n      if (cloudcast.description) {\n        title += UIHelper.wrapInDiv(cloudcast.description, UI_STYLES.DESCRIPTION);\n      }\n      if (cloudcast.description) {\n        title = UIHelper.wrapInDiv(title, 'width: 100%;');\n      }\n      else {\n        title = UIHelper.wrapInDiv(title, 'width: 100%; margin-bottom: -24px;');\n      }\n      lists[0].title = title;\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: renderer.renderToHeader(cloudcast),\n        lists\n      }\n    };\n  }\n\n  async #browseUserShows(username: string): Promise<RenderedPage> {\n    const view = this.currentView;\n\n    const cloudcastParams: CloudcastModelGetCloudcastsParams = {\n      username: username,\n      limit: view.inSection ? mixcloud.getConfigValue('itemsPerSection') : mixcloud.getConfigValue('itemsPerPage')\n    };\n    if (view.pageRef) {\n      cloudcastParams.pageToken = view.pageRef.pageToken;\n      cloudcastParams.pageOffset = view.pageRef.pageOffset;\n    }\n    if (view.orderBy) {\n      cloudcastParams.orderBy = view.orderBy;\n    }\n\n    const userModel = this.getModel(ModelType.User);\n    const cloudcastModel = this.getModel(ModelType.Cloudcast);\n\n    const [ cloudcasts, user ] = await Promise.all([\n      cloudcastModel.getCloudcasts(cloudcastParams),\n      userModel.getUser(username)\n    ]);\n\n    const lists: RenderedList[] = [];\n\n    if (cloudcasts.items.length > 0) {\n      const optionList = await this.getOptionList({\n        getOptionBundle: async () => userModel.getShowsOptions(),\n        currentSelected: cloudcasts.params\n      });\n\n      if (optionList) {\n        lists.push(optionList);\n      }\n\n      lists.push(this.getCloudcastList(cloudcasts));\n\n      lists[0].title = mixcloud.getI18n('MIXCLOUD_SHOWS');\n\n      if (!this.currentView.inSection) {\n        const backLink = this.constructPrevViewLink(mixcloud.getI18n('MIXCLOUD_BACK_LINK_USER'));\n        lists[0].title = UIHelper.constructListTitleWithLink(lists[0].title, backLink, true);\n      }\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: user ? this.getRenderer(RendererType.User).renderToHeader(user) : undefined,\n        lists\n      }\n    };\n  }\n\n\n  async #browseUserShowOptionValues(option: string) {\n    return this.browseOptionValues({\n      getOptionBundle: async () => this.getModel(ModelType.User).getShowsOptions(),\n      targetOption: option\n    });\n  }\n\n  async #browseSearchOptionValues(option: string) {\n    return this.browseOptionValues({\n      getOptionBundle: async () => this.getModel(ModelType.Cloudcast).getSearchOptions(),\n      targetOption: option\n    });\n  }\n\n  async #browsePlaylistItems(playlistId: string): Promise<RenderedPage> {\n    const view = this.currentView;\n\n    const cloudcastParams: CloudcastModelGetCloudcastsParams = {\n      playlistId,\n      limit: view.inSection ? mixcloud.getConfigValue('itemsPerSection') : mixcloud.getConfigValue('itemsPerPage')\n    };\n    if (view.pageRef) {\n      cloudcastParams.pageToken = view.pageRef.pageToken;\n      cloudcastParams.pageOffset = view.pageRef.pageOffset;\n    }\n\n    const playlistModel = this.getModel(ModelType.Playlist);\n    const cloudcastModel = this.getModel(ModelType.Cloudcast);\n\n    const [ cloudcasts, playlist ] = await Promise.all([\n      cloudcastModel.getCloudcasts(cloudcastParams),\n      playlistModel.getPlaylist(playlistId)\n    ]);\n\n    const lists: RenderedList[] = [ this.getCloudcastList(cloudcasts) ];\n\n    if (UIHelper.supportsEnhancedTitles() && playlist?.url) {\n      let title = '';\n      const link: UILink = {\n        url: playlist.url,\n        text: mixcloud.getI18n('MIXCLOUD_VIEW_LINK_PLAYLIST'),\n        icon: { type: 'mixcloud' },\n        style: UI_STYLES.VIEW_LINK,\n        target: '_blank'\n      };\n      title = UIHelper.constructListTitleWithLink('', link, true);\n      if (playlist.description) {\n        title += UIHelper.wrapInDiv(playlist.description, UI_STYLES.DESCRIPTION);\n      }\n      if (playlist.description) {\n        title = UIHelper.wrapInDiv(title, 'width: 100%;');\n      }\n      else {\n        title = UIHelper.wrapInDiv(title, 'width: 100%; margin-bottom: -24px;');\n      }\n      lists[0].title = title;\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: playlist ? this.getRenderer(RendererType.Playlist).renderToHeader(playlist) : undefined,\n        lists\n      }\n    };\n  }\n\n  async #browseSearchResults(keywords: string): Promise<RenderedPage> {\n    const view = this.currentView;\n\n    const cloudcastParams: CloudcastModelGetCloudcastsParams = {\n      keywords,\n      limit: view.inSection ? mixcloud.getConfigValue('itemsPerSection') : mixcloud.getConfigValue('itemsPerPage')\n    };\n    if (view.pageRef) {\n      cloudcastParams.pageToken = view.pageRef.pageToken;\n      cloudcastParams.pageOffset = view.pageRef.pageOffset;\n    }\n    if (view.dateUploaded !== undefined) {\n      cloudcastParams.dateUploaded = view.dateUploaded;\n    }\n\n    const model = this.getModel(ModelType.Cloudcast);\n    const cloudcasts = await model.getCloudcasts(cloudcastParams);\n    const lists: RenderedList[] = [];\n\n    const optionList = await this.getOptionList({\n      getOptionBundle: async () => model.getSearchOptions(),\n      currentSelected: cloudcasts.params,\n      showOptionName: () => true\n    });\n    if (optionList) {\n      lists.push(optionList);\n    }\n\n    lists.push(this.getCloudcastList(cloudcasts, true));\n\n    let title;\n    if (view.inSection) {\n      title = mixcloud.getI18n(UIHelper.supportsEnhancedTitles() ? 'MIXCLOUD_SHOWS' : 'MIXCLOUD_SHOWS_FULL');\n    }\n    else {\n      title = mixcloud.getI18n(UIHelper.supportsEnhancedTitles() ? 'MIXCLOUD_SHOWS_MATCHING' : 'MIXCLOUD_SHOWS_MATCHING_FULL', keywords);\n    }\n    lists[0].title = UIHelper.addMixcloudIconToListTitle(title);\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n  }\n\n  protected async getStreamableEntitiesOnExplode() {\n    const view = this.currentView;\n    const model = this.getModel(ModelType.Cloudcast);\n\n    if (view.cloudcastId) {\n      const cloudcast = await model.getCloudcast(view.cloudcastId);\n      return cloudcast || [];\n    }\n    else if (view.username) {\n      const cloudcastParams: CloudcastModelGetCloudcastsParams = {\n        username: view.username,\n        limit: mixcloud.getConfigValue('itemsPerPage')\n      };\n\n      if (view.pageRef) {\n        cloudcastParams.pageToken = view.pageRef.pageToken;\n        cloudcastParams.pageOffset = view.pageRef.pageOffset;\n      }\n\n      if (view.orderBy !== undefined) {\n        cloudcastParams.orderBy = view.orderBy;\n      }\n\n      const cloudcasts = await model.getCloudcasts(cloudcastParams);\n      return cloudcasts.items;\n    }\n    else if (view.playlistId) {\n      const cloudcastParams: CloudcastModelGetCloudcastsParams = {\n        playlistId: view.playlistId,\n        limit: mixcloud.getConfigValue('itemsPerPage')\n      };\n\n      if (view.pageRef) {\n        cloudcastParams.pageToken = view.pageRef.pageToken;\n        cloudcastParams.pageOffset = view.pageRef.pageOffset;\n      }\n\n      const cloudcasts = await model.getCloudcasts(cloudcastParams);\n      return cloudcasts.items;\n    }\n\n    throw Error('Operation not supported');\n  }\n}\n"]}