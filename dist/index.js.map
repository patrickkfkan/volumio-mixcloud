{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport mixcloud from './lib/MixcloudContext';\nimport BrowseController from './lib/controller/browse';\nimport SearchController, { SearchQuery } from './lib/controller/search/SearchController';\nimport PlayController from './lib/controller/play/PlayController';\nimport { ExplodedTrackInfo } from './lib/controller/browse/view-handlers/ExplodableViewHandler';\nimport { jsPromiseToKew } from './lib/util';\nimport { RenderedPage } from './lib/controller/browse/view-handlers/ViewHandler';\nimport ViewHelper from './lib/controller/browse/view-handlers/ViewHelper';\nimport Model from './lib/model';\nimport { UserView } from './lib/controller/browse/view-handlers/UserViewHandler';\n\ninterface GotoParams extends ExplodedTrackInfo {\n  type: 'album' | 'artist';\n}\n\nclass ControllerMixcloud {\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n\n  #browseController: BrowseController | null;\n  #searchController: SearchController | null;\n  #playController: PlayController | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = context.coreCommand;\n  }\n\n  getUIConfig() {\n    const defer = libQ.defer();\n\n    const lang_code = this.#commandRouter.sharedVars.get('language_code');\n\n    const configPrepTasks = [\n      this.#commandRouter.i18nJson(`${__dirname}/i18n/strings_${lang_code}.json`,\n        `${__dirname}/i18n/strings_en.json`,\n        `${__dirname}/UIConfig.json`)\n    ];\n\n    libQ.all(configPrepTasks).then((configParams: [any, string]) => {\n      const [ uiconf ] = configParams;\n      const generalUIConf = uiconf.sections[0];\n      const cacheUIConf = uiconf.sections[1];\n\n      // General\n      generalUIConf.content[0].value = mixcloud.getConfigValue('itemsPerPage');\n      generalUIConf.content[1].value = mixcloud.getConfigValue('itemsPerSection');\n\n      // Cache\n      const cacheMaxEntries = mixcloud.getConfigValue('cacheMaxEntries');\n      const cacheTTL = mixcloud.getConfigValue('cacheTTL');\n      const cacheEntryCount = mixcloud.getCache().getEntryCount();\n      cacheUIConf.content[0].value = cacheMaxEntries;\n      cacheUIConf.content[1].value = cacheTTL;\n      cacheUIConf.description = cacheEntryCount > 0 ? mixcloud.getI18n('MIXCLOUD_CACHE_STATS', cacheEntryCount, Math.round(mixcloud.getCache().getMemoryUsageInKB()).toLocaleString()) : mixcloud.getI18n('MIXCLOUD_CACHE_EMPTY');\n\n      defer.resolve(uiconf);\n    })\n      .fail((error: any) => {\n        mixcloud.getLogger().error(`[mixcloud] getUIConfig(): Cannot populate Mixcloud configuration - ${error}`);\n        defer.reject(new Error());\n      }\n      );\n\n    return defer.promise;\n  }\n\n  refreshUIConfig() {\n    this.#commandRouter.getUIConfigOnPlugin('music_service', 'mixcloud', {}).then((config: any) => {\n      this.#commandRouter.broadcastMessage('pushUiConfig', config);\n    });\n  }\n\n  configSaveGeneralSettings(data: any) {\n    const itemsPerPage = parseInt(data.itemsPerPage, 10);\n    const itemsPerSection = parseInt(data.itemsPerSection, 10);\n    if (!itemsPerPage) {\n      mixcloud.toast('error', mixcloud.getI18n('MIXCLOUD_SETTINGS_ERR_ITEMS_PER_PAGE'));\n      return;\n    }\n    if (!itemsPerSection) {\n      mixcloud.toast('error', mixcloud.getI18n('MIXCLOUD_SETTINGS_ERR_ITEMS_PER_SECTION'));\n      return;\n    }\n\n    mixcloud.setConfigValue('itemsPerPage', itemsPerPage);\n    mixcloud.setConfigValue('itemsPerSection', itemsPerSection);\n\n    mixcloud.toast('success', mixcloud.getI18n('MIXCLOUD_SETTINGS_SAVED'));\n  }\n\n  configSaveCacheSettings(data: any) {\n    const cacheMaxEntries = parseInt(data.cacheMaxEntries, 10);\n    const cacheTTL = parseInt(data.cacheTTL, 10);\n    if (cacheMaxEntries < 1000) {\n      mixcloud.toast('error', mixcloud.getI18n('MIXCLOUD_SETTINGS_ERR_CACHE_MAX_ENTRIES'));\n      return;\n    }\n    if (cacheTTL < 600) {\n      mixcloud.toast('error', mixcloud.getI18n('MIXCLOUD_SETTINGS_ERR_CACHE_TTL'));\n      return;\n    }\n\n    mixcloud.setConfigValue('cacheMaxEntries', cacheMaxEntries);\n    mixcloud.setConfigValue('cacheTTL', cacheTTL);\n\n    mixcloud.getCache().setMaxEntries(cacheMaxEntries);\n    mixcloud.getCache().setTTL(cacheTTL);\n\n    mixcloud.toast('success', mixcloud.getI18n('MIXCLOUD_SETTINGS_SAVED'));\n    this.refreshUIConfig();\n  }\n\n  configClearCache() {\n    mixcloud.getCache().clear();\n    Model.clearLibCache();\n    mixcloud.toast('success', mixcloud.getI18n('MIXCLOUD_CACHE_CLEARED'));\n    this.refreshUIConfig();\n  }\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve();\n  }\n\n  onStart() {\n    mixcloud.init(this.#context, this.#config);\n\n    this.#browseController = new BrowseController();\n    this.#searchController = new SearchController();\n    this.#playController = new PlayController();\n\n    this.#addToBrowseSources();\n\n    return libQ.resolve();\n  }\n\n  onStop() {\n    this.#commandRouter.volumioRemoveToBrowseSources('Mixcloud');\n\n    this.#browseController = null;\n    this.#searchController = null;\n    this.#playController = null;\n\n    Model.reset();\n    mixcloud.reset();\n\n    return libQ.resolve();\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  #addToBrowseSources() {\n    const data = {\n      name: 'Mixcloud',\n      uri: 'mixcloud',\n      plugin_type: 'music_service',\n      plugin_name: 'mixcloud',\n      albumart: '/albumart?sourceicon=music_service/mixcloud/dist/assets/images/mixcloud.png'\n    };\n    this.#commandRouter.volumioAddToBrowseSources(data);\n  }\n\n  handleBrowseUri(uri: string) {\n    if (!this.#browseController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return jsPromiseToKew(this.#browseController.browseUri(uri));\n  }\n\n  explodeUri(uri: string) {\n    if (!this.#browseController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return jsPromiseToKew(this.#browseController.explodeUri(uri));\n  }\n\n  clearAddPlayTrack(track: any) {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return jsPromiseToKew(this.#playController.clearAddPlayTrack(track));\n  }\n\n  stop() {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.stop();\n  }\n\n  pause() {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.pause();\n  }\n\n  resume() {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.resume();\n  }\n\n  seek(position: number) {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.seek(position);\n  }\n\n  next() {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.next();\n  }\n\n  previous() {\n    if (!this.#playController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return this.#playController.previous();\n  }\n\n  search(query: SearchQuery) {\n    if (!this.#searchController) {\n      return libQ.reject('Mixcloud plugin is not started');\n    }\n    return jsPromiseToKew(this.#searchController.search(query));\n  }\n\n  goto(data: GotoParams) {\n    return jsPromiseToKew((async (): Promise<RenderedPage> => {\n      if (!this.#browseController) {\n        throw Error('Mixcloud plugin is not started');\n      }\n      try {\n        const views = ViewHelper.getViewsFromUri(data.uri);\n        const trackView = views.pop();\n        if (!trackView || trackView.name !== 'cloudcast') {\n          return this.#browseController.browseUri('mixcloud');\n        }\n        if (data.type === 'artist' && trackView.owner) {\n          const userView: UserView = {\n            name: 'user',\n            username: trackView.owner\n          };\n          return this.#browseController.browseUri(`mixcloud/${ViewHelper.constructUriSegmentFromView(userView)}`);\n        }\n\n        return this.#browseController.browseUri('mixcloud');\n\n      }\n      catch (error: any) {\n        throw Error(`Failed to fetch requested info: ${error.message}`);\n      }\n    })());\n  }\n}\n\nexport = ControllerMixcloud;\n"]}